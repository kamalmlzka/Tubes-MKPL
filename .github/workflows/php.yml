name: PHPUnit

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: "true"
          MYSQL_PASSWORD: ''
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_DATABASE: 'tubes_webpro'
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
          
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, intl, dom, pdo_mysql
        
    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install

    - name: Wait for MySQL to be ready
      run: sudo apt-get install -y mysql-client && until mysqladmin ping -h"127.0.0.1" --silent; do sleep 1; done

    - name: Run PHPUnit for ExampleDatabaseTest
      env:
        DB_HOST: 127.0.0.1
        DB_DATABASE: tubes_webpro
        DB_USERNAME: ''
        DB_PASSWORD: ''
      run: ./vendor/bin/phpunit tests/database/ExampleDatabaseTest.php

    - name: Run PHPUnit for ExampleSessionTest
      run: ./vendor/bin/phpunit tests/session/ExampleSessionTest.php

    - name: Run PHPUnit for HealthTest
      run: ./vendor/bin/phpunit tests/unit/HealthTest.php

    - name: Run PHPUnit for Login
      run: ./vendor/bin/phpunit tests/view/LoginTest.php
    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Run test suite
    #   run: composer run-script test
